worker_processes  1;
# 错误日志级别设置为error
error_log D:/openform-web/openresty-1.13.6.2-win32/logs/error.log error;

events {
    # 使用epoll的I/O 模型。linux建议epoll，FreeBSD建议采用kqueue，window下不指定。
    # use epoll;
    worker_connections 1024;
}

http {
	# 指定默认的MIME type, 否则页面样式可能无法显示
    include D:/openform-web/openresty-1.13.6.2-win32/conf/mime.types;
    default_type application/octet-stream;

	lua_package_path "D:/openform-web/openresty-1.13.6.2-win32/lualib/?.lua;;";
	lua_package_cpath "D:/openform-web/openresty-1.13.6.2-win32/lualib/?.so;;";
	# utf-8编码
	charset utf-8;
    sendfile on;
    # 允许最大上传的文件大小
    client_max_body_size 4096m;
    # client_body_buffer_size 4096m;
    # 配置header变量能使用带下划线的变量
    underscores_in_headers on;
    ignore_invalid_headers off;
    # 将完整的请求主体存储在单个缓冲区
    client_body_in_single_buffer on;

    keepalive_timeout 24000;
    proxy_buffer_size 64k;
    proxy_buffers 4 128k;
    proxy_busy_buffers_size 256k;
    # 后端服务器连接的超时时间_发起握手等候响应超时时间（秒）
    proxy_connect_timeout 5;
    # 连接成功后_等候后端服务器响应时间_其实已经进入后端的排队之中等候处理（也可以说是后端服务器处理请求的时间）
    proxy_read_timeout 120;
    # 后端服务器数据回传时间_就是在规定时间之内后端服务器必须传完所有的数据
    proxy_send_timeout 1200;

    # fileManager服务器地址
    upstream fileManager {
        server 127.0.0.1:8081;
    }
    #hide nginx version for security
    server_tokens off;

    server {
        listen 8080;

        # 设置访问日志分割
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
        }
        access_log D:/openform-web/openresty-1.13.6.2-win32/logs/access-$year-$month-$day.log;

        # 默认不读取body
        lua_need_request_body off;
        # 使用lua调试模式（即关闭lua脚本缓存)
        # lua_code_cache off;

        # 以下接口1、2、3、4、5、6是提供给外部调用的接口
        # 1、使能平台，启动计算进程，参数传入所上传的vtk文件所在子目录名
        location = /VTK2GLTF {
            # 仅允许POST请求
            if ($request_method != POST) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/VTK2GLTF.lua;
        }

        # 2、使能平台，启动计算进程，参数传入所上传的skp文件所在子目录名
        location = /SKP2GLTF {
            # 仅允许POST请求
            if ($request_method != POST) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/SKP2GLTF.lua;
        }

        # 查询进程名是否存在
        location = /queryproc {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/process_status.lua;
        }

        # 仅上传(可使用)
        location = /upload {
            # 仅允许内部调用
            # internal;
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/upload /$dirid/?format=json? break;
                proxy_pass http://fileManager;
            }
        }
        # 3、上传目录zip，参数unzip指明是否需要解压（提供给外部，先自动创建目录，再上传文件，并创建result文件夹，最后返回子目录名称）
        location = /uploadfile {
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/upload_file.lua;

        }
        # 上传并解压(可使用, 直接转发到fileManager服务)
        location = /uploadAndUnzip {
            # 仅允许内部调用
            # internal;
            # 仅允许PUT请求
            if ($request_method != PUT) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            rewrite ^/uploadAndUnzip / break;
            proxy_pass http://fileManager;
        }
        # 5、列出待下载目录result下的文件列表
        location = /listfile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/listfile /workhome/$dirid/result/?format=json? break;
                proxy_pass http://fileManager;
            }
            #content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/list_file.lua;
        }
        # 4、下载(指定子目录名称，下载子目录下的result文件夹，若result不存在会返回502错误)
        location = /downloadfile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "dirid=(.*)") {
                set $dirid $1;
                rewrite  ^/downloadfile /workhome/$dirid/result/?format=zip? break;
                proxy_pass http://fileManager;
            }
        }

        # 6、列出指定目录下的文件列表，参数为path，例如a/b/c
        location = /listpathfile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            if ($query_string ~ "path=(.*)") {
                set $path $1;
                rewrite  ^/listpathfile /$path/?format=json? break;
                proxy_pass http://fileManager;
            }
        }

        # 7、删除文件
        location = /deletefile {
            # 仅允许POST请求
            if ($request_method != POST) {
                # Method not allowed
                return 405;
            }
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            rewrite ^/deletefile / break;
            proxy_pass http://fileManager;
        }

        # 8、删除文件夹 delete请求
        location = /deletedir {
            # 仅允许delete请求
            if ($request_method != DELETE) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/delete_dir.lua;
        }

        # 9、列出workhome下所有文件夹及其result下的文件
        location = /listall {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/list_all.lua;
        }

        # 下载单个文件
        location = /downloadonefile {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file D:/openform-web/openresty-1.13.6.2-win32/lua-script/download_one_file.lua;
        }
    }
}
